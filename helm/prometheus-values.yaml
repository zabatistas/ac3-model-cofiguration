# Values for kube-prometheus-stack
# Enables node-exporter, kube-state-metrics, and blackbox-exporter
# Configures Prometheus remote_write to Thanos Receiver

prometheus:
  prometheusSpec:
    # Tune retention, volume, replicas as required
    replicas: 2
    retention: 15d
    # Use shard/fanout remote_write as needed
    remoteWrite:
      - url: "http://82.223.13.241:10908/api/v1/receive"
        writeRelabelConfigs:
          - sourceLabels: ['__address__']
            regex: '.*'
            targetLabel: 'application_id'
            replacement: 'exampleconfig'
          - sourceLabels: ['__address__']
            regex: '.*'
            targetLabel: 'cluster_id'
            replacement: 'REPLACE_WITH_YOUR_CLOUD_PROVIDER'  # e.g., "aws", "azure", "gcp", "on-premise"
    # If your Thanos receiver requires auth via bearer token, set basicAuth/bearerToken config
    # bearerToken: /etc/prometheus/secrets/thanos-remote-write/THAOS_REMOTE_WRITE_BEARER_TOKEN
    # If TLS config required, you can add tls_config here

  # serviceMonitorSelector, so ServiceMonitors with matching labels are discovered
  serviceMonitorSelector:
    matchExpressions: []
  serviceMonitorNamespaceSelector:
    matchNames:
      - app

  podMonitorSelector: {}

serviceAccounts:
  server:
    create: true

kubePrometheusNodeAlerting: true
kubePrometheusNodeRecording: true

# Make the chart create the exporters
kube-state-metrics:
  enabled: true

nodeExporter:
  enabled: true
  # use host PID/network if needed

blackboxExporter:
  enabled: true
  config:
    modules:
      http_2xx:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2"]

# Configure scrape configs — the chart already provides defaults for kube components
# If you want additional scrape_config for blackbox probing remote endpoints, define them here

# Configure remote write secret as a Kubernetes Secret mounted into Prometheus server
# extraSecrets:
#   - thanos-remote-write

# Mount the secret and make Prometheus server read it
serverFiles:
  "prometheus.yml": |
    # This file is templated by the chart. We do not recommend full overrides here; instead we set remoteWrite above.

# RBAC and CRDs are usually installed by the chart. If your cluster prohibits automatic CRD installation, install CRDs first.

# Grafana is optional — disabled here but feel free to enable
# grafana:
#   enabled: true
#   adminPassword: "REPLACE_ME_GRAFANA_PASSWORD"
  # Provide dashboards if desired

# Set resource requests/limits according to your cluster

# Notes about secrets and remote_write:
# - create a K8s secret named `thanos-remote-write` in the monitoring namespace with the bearer token and/or url if needed.
# - The chart will mount the secret into Prometheus server pod when references are set above.
